/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gaia;  
@SuppressWarnings("all")
public class status_response extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"status_response\",\"namespace\":\"avro.java.gaia\",\"fields\":[{\"name\":\"set_id\",\"type\":\"string\"},{\"name\":\"set_ids\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"is_parent\",\"type\":{\"type\":\"array\",\"items\":\"boolean\"}},{\"name\":\"semantic_types\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"labels\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"sizes\",\"type\":{\"type\":\"array\",\"items\":\"int\"}},{\"name\":\"full_sizes\",\"type\":{\"type\":\"array\",\"items\":\"int\"}},{\"name\":\"child_map\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":\"string\"}}},{\"name\":\"total_size\",\"type\":\"int\"},{\"name\":\"total_full_size\",\"type\":\"int\"}]}");
  @Deprecated public java.lang.CharSequence set_id;
  @Deprecated public java.util.List<java.lang.CharSequence> set_ids;
  @Deprecated public java.util.List<java.lang.Boolean> is_parent;
  @Deprecated public java.util.List<java.lang.CharSequence> semantic_types;
  @Deprecated public java.util.List<java.lang.CharSequence> labels;
  @Deprecated public java.util.List<java.lang.Integer> sizes;
  @Deprecated public java.util.List<java.lang.Integer> full_sizes;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>> child_map;
  @Deprecated public int total_size;
  @Deprecated public int total_full_size;

  /**
   * Default constructor.
   */
  public status_response() {}

  /**
   * All-args constructor.
   */
  public status_response(java.lang.CharSequence set_id, java.util.List<java.lang.CharSequence> set_ids, java.util.List<java.lang.Boolean> is_parent, java.util.List<java.lang.CharSequence> semantic_types, java.util.List<java.lang.CharSequence> labels, java.util.List<java.lang.Integer> sizes, java.util.List<java.lang.Integer> full_sizes, java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>> child_map, java.lang.Integer total_size, java.lang.Integer total_full_size) {
    this.set_id = set_id;
    this.set_ids = set_ids;
    this.is_parent = is_parent;
    this.semantic_types = semantic_types;
    this.labels = labels;
    this.sizes = sizes;
    this.full_sizes = full_sizes;
    this.child_map = child_map;
    this.total_size = total_size;
    this.total_full_size = total_full_size;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return set_id;
    case 1: return set_ids;
    case 2: return is_parent;
    case 3: return semantic_types;
    case 4: return labels;
    case 5: return sizes;
    case 6: return full_sizes;
    case 7: return child_map;
    case 8: return total_size;
    case 9: return total_full_size;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: set_id = (java.lang.CharSequence)value$; break;
    case 1: set_ids = (java.util.List<java.lang.CharSequence>)value$; break;
    case 2: is_parent = (java.util.List<java.lang.Boolean>)value$; break;
    case 3: semantic_types = (java.util.List<java.lang.CharSequence>)value$; break;
    case 4: labels = (java.util.List<java.lang.CharSequence>)value$; break;
    case 5: sizes = (java.util.List<java.lang.Integer>)value$; break;
    case 6: full_sizes = (java.util.List<java.lang.Integer>)value$; break;
    case 7: child_map = (java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>>)value$; break;
    case 8: total_size = (java.lang.Integer)value$; break;
    case 9: total_full_size = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'set_id' field.
   */
  public java.lang.CharSequence getSetId() {
    return set_id;
  }

  /**
   * Sets the value of the 'set_id' field.
   * @param value the value to set.
   */
  public void setSetId(java.lang.CharSequence value) {
    this.set_id = value;
  }

  /**
   * Gets the value of the 'set_ids' field.
   */
  public java.util.List<java.lang.CharSequence> getSetIds() {
    return set_ids;
  }

  /**
   * Sets the value of the 'set_ids' field.
   * @param value the value to set.
   */
  public void setSetIds(java.util.List<java.lang.CharSequence> value) {
    this.set_ids = value;
  }

  /**
   * Gets the value of the 'is_parent' field.
   */
  public java.util.List<java.lang.Boolean> getIsParent() {
    return is_parent;
  }

  /**
   * Sets the value of the 'is_parent' field.
   * @param value the value to set.
   */
  public void setIsParent(java.util.List<java.lang.Boolean> value) {
    this.is_parent = value;
  }

  /**
   * Gets the value of the 'semantic_types' field.
   */
  public java.util.List<java.lang.CharSequence> getSemanticTypes() {
    return semantic_types;
  }

  /**
   * Sets the value of the 'semantic_types' field.
   * @param value the value to set.
   */
  public void setSemanticTypes(java.util.List<java.lang.CharSequence> value) {
    this.semantic_types = value;
  }

  /**
   * Gets the value of the 'labels' field.
   */
  public java.util.List<java.lang.CharSequence> getLabels() {
    return labels;
  }

  /**
   * Sets the value of the 'labels' field.
   * @param value the value to set.
   */
  public void setLabels(java.util.List<java.lang.CharSequence> value) {
    this.labels = value;
  }

  /**
   * Gets the value of the 'sizes' field.
   */
  public java.util.List<java.lang.Integer> getSizes() {
    return sizes;
  }

  /**
   * Sets the value of the 'sizes' field.
   * @param value the value to set.
   */
  public void setSizes(java.util.List<java.lang.Integer> value) {
    this.sizes = value;
  }

  /**
   * Gets the value of the 'full_sizes' field.
   */
  public java.util.List<java.lang.Integer> getFullSizes() {
    return full_sizes;
  }

  /**
   * Sets the value of the 'full_sizes' field.
   * @param value the value to set.
   */
  public void setFullSizes(java.util.List<java.lang.Integer> value) {
    this.full_sizes = value;
  }

  /**
   * Gets the value of the 'child_map' field.
   */
  public java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>> getChildMap() {
    return child_map;
  }

  /**
   * Sets the value of the 'child_map' field.
   * @param value the value to set.
   */
  public void setChildMap(java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>> value) {
    this.child_map = value;
  }

  /**
   * Gets the value of the 'total_size' field.
   */
  public java.lang.Integer getTotalSize() {
    return total_size;
  }

  /**
   * Sets the value of the 'total_size' field.
   * @param value the value to set.
   */
  public void setTotalSize(java.lang.Integer value) {
    this.total_size = value;
  }

  /**
   * Gets the value of the 'total_full_size' field.
   */
  public java.lang.Integer getTotalFullSize() {
    return total_full_size;
  }

  /**
   * Sets the value of the 'total_full_size' field.
   * @param value the value to set.
   */
  public void setTotalFullSize(java.lang.Integer value) {
    this.total_full_size = value;
  }

  /** Creates a new status_response RecordBuilder */
  public static avro.java.gaia.status_response.Builder newBuilder() {
    return new avro.java.gaia.status_response.Builder();
  }
  
  /** Creates a new status_response RecordBuilder by copying an existing Builder */
  public static avro.java.gaia.status_response.Builder newBuilder(avro.java.gaia.status_response.Builder other) {
    return new avro.java.gaia.status_response.Builder(other);
  }
  
  /** Creates a new status_response RecordBuilder by copying an existing status_response instance */
  public static avro.java.gaia.status_response.Builder newBuilder(avro.java.gaia.status_response other) {
    return new avro.java.gaia.status_response.Builder(other);
  }
  
  /**
   * RecordBuilder for status_response instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<status_response>
    implements org.apache.avro.data.RecordBuilder<status_response> {

    private java.lang.CharSequence set_id;
    private java.util.List<java.lang.CharSequence> set_ids;
    private java.util.List<java.lang.Boolean> is_parent;
    private java.util.List<java.lang.CharSequence> semantic_types;
    private java.util.List<java.lang.CharSequence> labels;
    private java.util.List<java.lang.Integer> sizes;
    private java.util.List<java.lang.Integer> full_sizes;
    private java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>> child_map;
    private int total_size;
    private int total_full_size;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gaia.status_response.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gaia.status_response.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing status_response instance */
    private Builder(avro.java.gaia.status_response other) {
            super(avro.java.gaia.status_response.SCHEMA$);
      if (isValidValue(fields()[0], other.set_id)) {
        this.set_id = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.set_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.set_ids)) {
        this.set_ids = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[1].schema(), other.set_ids);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.is_parent)) {
        this.is_parent = (java.util.List<java.lang.Boolean>) data().deepCopy(fields()[2].schema(), other.is_parent);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.semantic_types)) {
        this.semantic_types = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[3].schema(), other.semantic_types);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.labels)) {
        this.labels = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[4].schema(), other.labels);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sizes)) {
        this.sizes = (java.util.List<java.lang.Integer>) data().deepCopy(fields()[5].schema(), other.sizes);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.full_sizes)) {
        this.full_sizes = (java.util.List<java.lang.Integer>) data().deepCopy(fields()[6].schema(), other.full_sizes);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.child_map)) {
        this.child_map = (java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>>) data().deepCopy(fields()[7].schema(), other.child_map);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.total_size)) {
        this.total_size = (java.lang.Integer) data().deepCopy(fields()[8].schema(), other.total_size);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.total_full_size)) {
        this.total_full_size = (java.lang.Integer) data().deepCopy(fields()[9].schema(), other.total_full_size);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'set_id' field */
    public java.lang.CharSequence getSetId() {
      return set_id;
    }
    
    /** Sets the value of the 'set_id' field */
    public avro.java.gaia.status_response.Builder setSetId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.set_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'set_id' field has been set */
    public boolean hasSetId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'set_id' field */
    public avro.java.gaia.status_response.Builder clearSetId() {
      set_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'set_ids' field */
    public java.util.List<java.lang.CharSequence> getSetIds() {
      return set_ids;
    }
    
    /** Sets the value of the 'set_ids' field */
    public avro.java.gaia.status_response.Builder setSetIds(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.set_ids = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'set_ids' field has been set */
    public boolean hasSetIds() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'set_ids' field */
    public avro.java.gaia.status_response.Builder clearSetIds() {
      set_ids = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'is_parent' field */
    public java.util.List<java.lang.Boolean> getIsParent() {
      return is_parent;
    }
    
    /** Sets the value of the 'is_parent' field */
    public avro.java.gaia.status_response.Builder setIsParent(java.util.List<java.lang.Boolean> value) {
      validate(fields()[2], value);
      this.is_parent = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'is_parent' field has been set */
    public boolean hasIsParent() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'is_parent' field */
    public avro.java.gaia.status_response.Builder clearIsParent() {
      is_parent = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'semantic_types' field */
    public java.util.List<java.lang.CharSequence> getSemanticTypes() {
      return semantic_types;
    }
    
    /** Sets the value of the 'semantic_types' field */
    public avro.java.gaia.status_response.Builder setSemanticTypes(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[3], value);
      this.semantic_types = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'semantic_types' field has been set */
    public boolean hasSemanticTypes() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'semantic_types' field */
    public avro.java.gaia.status_response.Builder clearSemanticTypes() {
      semantic_types = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'labels' field */
    public java.util.List<java.lang.CharSequence> getLabels() {
      return labels;
    }
    
    /** Sets the value of the 'labels' field */
    public avro.java.gaia.status_response.Builder setLabels(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.labels = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'labels' field has been set */
    public boolean hasLabels() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'labels' field */
    public avro.java.gaia.status_response.Builder clearLabels() {
      labels = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'sizes' field */
    public java.util.List<java.lang.Integer> getSizes() {
      return sizes;
    }
    
    /** Sets the value of the 'sizes' field */
    public avro.java.gaia.status_response.Builder setSizes(java.util.List<java.lang.Integer> value) {
      validate(fields()[5], value);
      this.sizes = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'sizes' field has been set */
    public boolean hasSizes() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'sizes' field */
    public avro.java.gaia.status_response.Builder clearSizes() {
      sizes = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'full_sizes' field */
    public java.util.List<java.lang.Integer> getFullSizes() {
      return full_sizes;
    }
    
    /** Sets the value of the 'full_sizes' field */
    public avro.java.gaia.status_response.Builder setFullSizes(java.util.List<java.lang.Integer> value) {
      validate(fields()[6], value);
      this.full_sizes = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'full_sizes' field has been set */
    public boolean hasFullSizes() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'full_sizes' field */
    public avro.java.gaia.status_response.Builder clearFullSizes() {
      full_sizes = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'child_map' field */
    public java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>> getChildMap() {
      return child_map;
    }
    
    /** Sets the value of the 'child_map' field */
    public avro.java.gaia.status_response.Builder setChildMap(java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>> value) {
      validate(fields()[7], value);
      this.child_map = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'child_map' field has been set */
    public boolean hasChildMap() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'child_map' field */
    public avro.java.gaia.status_response.Builder clearChildMap() {
      child_map = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'total_size' field */
    public java.lang.Integer getTotalSize() {
      return total_size;
    }
    
    /** Sets the value of the 'total_size' field */
    public avro.java.gaia.status_response.Builder setTotalSize(int value) {
      validate(fields()[8], value);
      this.total_size = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'total_size' field has been set */
    public boolean hasTotalSize() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'total_size' field */
    public avro.java.gaia.status_response.Builder clearTotalSize() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'total_full_size' field */
    public java.lang.Integer getTotalFullSize() {
      return total_full_size;
    }
    
    /** Sets the value of the 'total_full_size' field */
    public avro.java.gaia.status_response.Builder setTotalFullSize(int value) {
      validate(fields()[9], value);
      this.total_full_size = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'total_full_size' field has been set */
    public boolean hasTotalFullSize() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'total_full_size' field */
    public avro.java.gaia.status_response.Builder clearTotalFullSize() {
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public status_response build() {
      try {
        status_response record = new status_response();
        record.set_id = fieldSetFlags()[0] ? this.set_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.set_ids = fieldSetFlags()[1] ? this.set_ids : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        record.is_parent = fieldSetFlags()[2] ? this.is_parent : (java.util.List<java.lang.Boolean>) defaultValue(fields()[2]);
        record.semantic_types = fieldSetFlags()[3] ? this.semantic_types : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[3]);
        record.labels = fieldSetFlags()[4] ? this.labels : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[4]);
        record.sizes = fieldSetFlags()[5] ? this.sizes : (java.util.List<java.lang.Integer>) defaultValue(fields()[5]);
        record.full_sizes = fieldSetFlags()[6] ? this.full_sizes : (java.util.List<java.lang.Integer>) defaultValue(fields()[6]);
        record.child_map = fieldSetFlags()[7] ? this.child_map : (java.util.Map<java.lang.CharSequence,java.util.List<java.lang.CharSequence>>) defaultValue(fields()[7]);
        record.total_size = fieldSetFlags()[8] ? this.total_size : (java.lang.Integer) defaultValue(fields()[8]);
        record.total_full_size = fieldSetFlags()[9] ? this.total_full_size : (java.lang.Integer) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
