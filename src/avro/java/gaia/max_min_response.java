/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gaia;  
@SuppressWarnings("all")
public class max_min_response extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"max_min_response\",\"namespace\":\"avro.java.gaia\",\"fields\":[{\"name\":\"max\",\"type\":\"double\"},{\"name\":\"min\",\"type\":\"double\"}]}");
  @Deprecated public double max;
  @Deprecated public double min;

  /**
   * Default constructor.
   */
  public max_min_response() {}

  /**
   * All-args constructor.
   */
  public max_min_response(java.lang.Double max, java.lang.Double min) {
    this.max = max;
    this.min = min;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return max;
    case 1: return min;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: max = (java.lang.Double)value$; break;
    case 1: min = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'max' field.
   */
  public java.lang.Double getMax() {
    return max;
  }

  /**
   * Sets the value of the 'max' field.
   * @param value the value to set.
   */
  public void setMax(java.lang.Double value) {
    this.max = value;
  }

  /**
   * Gets the value of the 'min' field.
   */
  public java.lang.Double getMin() {
    return min;
  }

  /**
   * Sets the value of the 'min' field.
   * @param value the value to set.
   */
  public void setMin(java.lang.Double value) {
    this.min = value;
  }

  /** Creates a new max_min_response RecordBuilder */
  public static avro.java.gaia.max_min_response.Builder newBuilder() {
    return new avro.java.gaia.max_min_response.Builder();
  }
  
  /** Creates a new max_min_response RecordBuilder by copying an existing Builder */
  public static avro.java.gaia.max_min_response.Builder newBuilder(avro.java.gaia.max_min_response.Builder other) {
    return new avro.java.gaia.max_min_response.Builder(other);
  }
  
  /** Creates a new max_min_response RecordBuilder by copying an existing max_min_response instance */
  public static avro.java.gaia.max_min_response.Builder newBuilder(avro.java.gaia.max_min_response other) {
    return new avro.java.gaia.max_min_response.Builder(other);
  }
  
  /**
   * RecordBuilder for max_min_response instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<max_min_response>
    implements org.apache.avro.data.RecordBuilder<max_min_response> {

    private double max;
    private double min;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gaia.max_min_response.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gaia.max_min_response.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing max_min_response instance */
    private Builder(avro.java.gaia.max_min_response other) {
            super(avro.java.gaia.max_min_response.SCHEMA$);
      if (isValidValue(fields()[0], other.max)) {
        this.max = (java.lang.Double) data().deepCopy(fields()[0].schema(), other.max);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.min)) {
        this.min = (java.lang.Double) data().deepCopy(fields()[1].schema(), other.min);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'max' field */
    public java.lang.Double getMax() {
      return max;
    }
    
    /** Sets the value of the 'max' field */
    public avro.java.gaia.max_min_response.Builder setMax(double value) {
      validate(fields()[0], value);
      this.max = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'max' field has been set */
    public boolean hasMax() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'max' field */
    public avro.java.gaia.max_min_response.Builder clearMax() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'min' field */
    public java.lang.Double getMin() {
      return min;
    }
    
    /** Sets the value of the 'min' field */
    public avro.java.gaia.max_min_response.Builder setMin(double value) {
      validate(fields()[1], value);
      this.min = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'min' field has been set */
    public boolean hasMin() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'min' field */
    public avro.java.gaia.max_min_response.Builder clearMin() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public max_min_response build() {
      try {
        max_min_response record = new max_min_response();
        record.max = fieldSetFlags()[0] ? this.max : (java.lang.Double) defaultValue(fields()[0]);
        record.min = fieldSetFlags()[1] ? this.min : (java.lang.Double) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
