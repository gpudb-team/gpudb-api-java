/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gaia;  
@SuppressWarnings("all")
public class add_object_response extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"add_object_response\",\"namespace\":\"avro.java.gaia\",\"fields\":[{\"name\":\"OBJECT_ID\",\"type\":\"string\"},{\"name\":\"object_data\",\"type\":\"bytes\"},{\"name\":\"object_data_str\",\"type\":\"string\"},{\"name\":\"object_encoding\",\"type\":\"string\"},{\"name\":\"set_id\",\"type\":\"string\"},{\"name\":\"matching_triggers\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"matching_qualifiers\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"nonmatching_triggers\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"nonmatching_qualifiers\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}]}");
  @Deprecated public java.lang.CharSequence OBJECT_ID;
  @Deprecated public java.nio.ByteBuffer object_data;
  @Deprecated public java.lang.CharSequence object_data_str;
  @Deprecated public java.lang.CharSequence object_encoding;
  @Deprecated public java.lang.CharSequence set_id;
  @Deprecated public java.util.List<java.lang.CharSequence> matching_triggers;
  @Deprecated public java.util.List<java.lang.Double> matching_qualifiers;
  @Deprecated public java.util.List<java.lang.CharSequence> nonmatching_triggers;
  @Deprecated public java.util.List<java.lang.Double> nonmatching_qualifiers;

  /**
   * Default constructor.
   */
  public add_object_response() {}

  /**
   * All-args constructor.
   */
  public add_object_response(java.lang.CharSequence OBJECT_ID, java.nio.ByteBuffer object_data, java.lang.CharSequence object_data_str, java.lang.CharSequence object_encoding, java.lang.CharSequence set_id, java.util.List<java.lang.CharSequence> matching_triggers, java.util.List<java.lang.Double> matching_qualifiers, java.util.List<java.lang.CharSequence> nonmatching_triggers, java.util.List<java.lang.Double> nonmatching_qualifiers) {
    this.OBJECT_ID = OBJECT_ID;
    this.object_data = object_data;
    this.object_data_str = object_data_str;
    this.object_encoding = object_encoding;
    this.set_id = set_id;
    this.matching_triggers = matching_triggers;
    this.matching_qualifiers = matching_qualifiers;
    this.nonmatching_triggers = nonmatching_triggers;
    this.nonmatching_qualifiers = nonmatching_qualifiers;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return OBJECT_ID;
    case 1: return object_data;
    case 2: return object_data_str;
    case 3: return object_encoding;
    case 4: return set_id;
    case 5: return matching_triggers;
    case 6: return matching_qualifiers;
    case 7: return nonmatching_triggers;
    case 8: return nonmatching_qualifiers;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: OBJECT_ID = (java.lang.CharSequence)value$; break;
    case 1: object_data = (java.nio.ByteBuffer)value$; break;
    case 2: object_data_str = (java.lang.CharSequence)value$; break;
    case 3: object_encoding = (java.lang.CharSequence)value$; break;
    case 4: set_id = (java.lang.CharSequence)value$; break;
    case 5: matching_triggers = (java.util.List<java.lang.CharSequence>)value$; break;
    case 6: matching_qualifiers = (java.util.List<java.lang.Double>)value$; break;
    case 7: nonmatching_triggers = (java.util.List<java.lang.CharSequence>)value$; break;
    case 8: nonmatching_qualifiers = (java.util.List<java.lang.Double>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'OBJECT_ID' field.
   */
  public java.lang.CharSequence getOBJECTID() {
    return OBJECT_ID;
  }

  /**
   * Sets the value of the 'OBJECT_ID' field.
   * @param value the value to set.
   */
  public void setOBJECTID(java.lang.CharSequence value) {
    this.OBJECT_ID = value;
  }

  /**
   * Gets the value of the 'object_data' field.
   */
  public java.nio.ByteBuffer getObjectData() {
    return object_data;
  }

  /**
   * Sets the value of the 'object_data' field.
   * @param value the value to set.
   */
  public void setObjectData(java.nio.ByteBuffer value) {
    this.object_data = value;
  }

  /**
   * Gets the value of the 'object_data_str' field.
   */
  public java.lang.CharSequence getObjectDataStr() {
    return object_data_str;
  }

  /**
   * Sets the value of the 'object_data_str' field.
   * @param value the value to set.
   */
  public void setObjectDataStr(java.lang.CharSequence value) {
    this.object_data_str = value;
  }

  /**
   * Gets the value of the 'object_encoding' field.
   */
  public java.lang.CharSequence getObjectEncoding() {
    return object_encoding;
  }

  /**
   * Sets the value of the 'object_encoding' field.
   * @param value the value to set.
   */
  public void setObjectEncoding(java.lang.CharSequence value) {
    this.object_encoding = value;
  }

  /**
   * Gets the value of the 'set_id' field.
   */
  public java.lang.CharSequence getSetId() {
    return set_id;
  }

  /**
   * Sets the value of the 'set_id' field.
   * @param value the value to set.
   */
  public void setSetId(java.lang.CharSequence value) {
    this.set_id = value;
  }

  /**
   * Gets the value of the 'matching_triggers' field.
   */
  public java.util.List<java.lang.CharSequence> getMatchingTriggers() {
    return matching_triggers;
  }

  /**
   * Sets the value of the 'matching_triggers' field.
   * @param value the value to set.
   */
  public void setMatchingTriggers(java.util.List<java.lang.CharSequence> value) {
    this.matching_triggers = value;
  }

  /**
   * Gets the value of the 'matching_qualifiers' field.
   */
  public java.util.List<java.lang.Double> getMatchingQualifiers() {
    return matching_qualifiers;
  }

  /**
   * Sets the value of the 'matching_qualifiers' field.
   * @param value the value to set.
   */
  public void setMatchingQualifiers(java.util.List<java.lang.Double> value) {
    this.matching_qualifiers = value;
  }

  /**
   * Gets the value of the 'nonmatching_triggers' field.
   */
  public java.util.List<java.lang.CharSequence> getNonmatchingTriggers() {
    return nonmatching_triggers;
  }

  /**
   * Sets the value of the 'nonmatching_triggers' field.
   * @param value the value to set.
   */
  public void setNonmatchingTriggers(java.util.List<java.lang.CharSequence> value) {
    this.nonmatching_triggers = value;
  }

  /**
   * Gets the value of the 'nonmatching_qualifiers' field.
   */
  public java.util.List<java.lang.Double> getNonmatchingQualifiers() {
    return nonmatching_qualifiers;
  }

  /**
   * Sets the value of the 'nonmatching_qualifiers' field.
   * @param value the value to set.
   */
  public void setNonmatchingQualifiers(java.util.List<java.lang.Double> value) {
    this.nonmatching_qualifiers = value;
  }

  /** Creates a new add_object_response RecordBuilder */
  public static avro.java.gaia.add_object_response.Builder newBuilder() {
    return new avro.java.gaia.add_object_response.Builder();
  }
  
  /** Creates a new add_object_response RecordBuilder by copying an existing Builder */
  public static avro.java.gaia.add_object_response.Builder newBuilder(avro.java.gaia.add_object_response.Builder other) {
    return new avro.java.gaia.add_object_response.Builder(other);
  }
  
  /** Creates a new add_object_response RecordBuilder by copying an existing add_object_response instance */
  public static avro.java.gaia.add_object_response.Builder newBuilder(avro.java.gaia.add_object_response other) {
    return new avro.java.gaia.add_object_response.Builder(other);
  }
  
  /**
   * RecordBuilder for add_object_response instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<add_object_response>
    implements org.apache.avro.data.RecordBuilder<add_object_response> {

    private java.lang.CharSequence OBJECT_ID;
    private java.nio.ByteBuffer object_data;
    private java.lang.CharSequence object_data_str;
    private java.lang.CharSequence object_encoding;
    private java.lang.CharSequence set_id;
    private java.util.List<java.lang.CharSequence> matching_triggers;
    private java.util.List<java.lang.Double> matching_qualifiers;
    private java.util.List<java.lang.CharSequence> nonmatching_triggers;
    private java.util.List<java.lang.Double> nonmatching_qualifiers;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gaia.add_object_response.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gaia.add_object_response.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing add_object_response instance */
    private Builder(avro.java.gaia.add_object_response other) {
            super(avro.java.gaia.add_object_response.SCHEMA$);
      if (isValidValue(fields()[0], other.OBJECT_ID)) {
        this.OBJECT_ID = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.OBJECT_ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.object_data)) {
        this.object_data = (java.nio.ByteBuffer) data().deepCopy(fields()[1].schema(), other.object_data);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.object_data_str)) {
        this.object_data_str = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.object_data_str);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.object_encoding)) {
        this.object_encoding = (java.lang.CharSequence) data().deepCopy(fields()[3].schema(), other.object_encoding);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.set_id)) {
        this.set_id = (java.lang.CharSequence) data().deepCopy(fields()[4].schema(), other.set_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.matching_triggers)) {
        this.matching_triggers = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[5].schema(), other.matching_triggers);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.matching_qualifiers)) {
        this.matching_qualifiers = (java.util.List<java.lang.Double>) data().deepCopy(fields()[6].schema(), other.matching_qualifiers);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.nonmatching_triggers)) {
        this.nonmatching_triggers = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[7].schema(), other.nonmatching_triggers);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nonmatching_qualifiers)) {
        this.nonmatching_qualifiers = (java.util.List<java.lang.Double>) data().deepCopy(fields()[8].schema(), other.nonmatching_qualifiers);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'OBJECT_ID' field */
    public java.lang.CharSequence getOBJECTID() {
      return OBJECT_ID;
    }
    
    /** Sets the value of the 'OBJECT_ID' field */
    public avro.java.gaia.add_object_response.Builder setOBJECTID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.OBJECT_ID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'OBJECT_ID' field has been set */
    public boolean hasOBJECTID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'OBJECT_ID' field */
    public avro.java.gaia.add_object_response.Builder clearOBJECTID() {
      OBJECT_ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'object_data' field */
    public java.nio.ByteBuffer getObjectData() {
      return object_data;
    }
    
    /** Sets the value of the 'object_data' field */
    public avro.java.gaia.add_object_response.Builder setObjectData(java.nio.ByteBuffer value) {
      validate(fields()[1], value);
      this.object_data = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'object_data' field has been set */
    public boolean hasObjectData() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'object_data' field */
    public avro.java.gaia.add_object_response.Builder clearObjectData() {
      object_data = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'object_data_str' field */
    public java.lang.CharSequence getObjectDataStr() {
      return object_data_str;
    }
    
    /** Sets the value of the 'object_data_str' field */
    public avro.java.gaia.add_object_response.Builder setObjectDataStr(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.object_data_str = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'object_data_str' field has been set */
    public boolean hasObjectDataStr() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'object_data_str' field */
    public avro.java.gaia.add_object_response.Builder clearObjectDataStr() {
      object_data_str = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'object_encoding' field */
    public java.lang.CharSequence getObjectEncoding() {
      return object_encoding;
    }
    
    /** Sets the value of the 'object_encoding' field */
    public avro.java.gaia.add_object_response.Builder setObjectEncoding(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.object_encoding = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'object_encoding' field has been set */
    public boolean hasObjectEncoding() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'object_encoding' field */
    public avro.java.gaia.add_object_response.Builder clearObjectEncoding() {
      object_encoding = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'set_id' field */
    public java.lang.CharSequence getSetId() {
      return set_id;
    }
    
    /** Sets the value of the 'set_id' field */
    public avro.java.gaia.add_object_response.Builder setSetId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.set_id = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'set_id' field has been set */
    public boolean hasSetId() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'set_id' field */
    public avro.java.gaia.add_object_response.Builder clearSetId() {
      set_id = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'matching_triggers' field */
    public java.util.List<java.lang.CharSequence> getMatchingTriggers() {
      return matching_triggers;
    }
    
    /** Sets the value of the 'matching_triggers' field */
    public avro.java.gaia.add_object_response.Builder setMatchingTriggers(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[5], value);
      this.matching_triggers = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'matching_triggers' field has been set */
    public boolean hasMatchingTriggers() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'matching_triggers' field */
    public avro.java.gaia.add_object_response.Builder clearMatchingTriggers() {
      matching_triggers = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'matching_qualifiers' field */
    public java.util.List<java.lang.Double> getMatchingQualifiers() {
      return matching_qualifiers;
    }
    
    /** Sets the value of the 'matching_qualifiers' field */
    public avro.java.gaia.add_object_response.Builder setMatchingQualifiers(java.util.List<java.lang.Double> value) {
      validate(fields()[6], value);
      this.matching_qualifiers = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'matching_qualifiers' field has been set */
    public boolean hasMatchingQualifiers() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'matching_qualifiers' field */
    public avro.java.gaia.add_object_response.Builder clearMatchingQualifiers() {
      matching_qualifiers = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'nonmatching_triggers' field */
    public java.util.List<java.lang.CharSequence> getNonmatchingTriggers() {
      return nonmatching_triggers;
    }
    
    /** Sets the value of the 'nonmatching_triggers' field */
    public avro.java.gaia.add_object_response.Builder setNonmatchingTriggers(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.nonmatching_triggers = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'nonmatching_triggers' field has been set */
    public boolean hasNonmatchingTriggers() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'nonmatching_triggers' field */
    public avro.java.gaia.add_object_response.Builder clearNonmatchingTriggers() {
      nonmatching_triggers = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'nonmatching_qualifiers' field */
    public java.util.List<java.lang.Double> getNonmatchingQualifiers() {
      return nonmatching_qualifiers;
    }
    
    /** Sets the value of the 'nonmatching_qualifiers' field */
    public avro.java.gaia.add_object_response.Builder setNonmatchingQualifiers(java.util.List<java.lang.Double> value) {
      validate(fields()[8], value);
      this.nonmatching_qualifiers = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'nonmatching_qualifiers' field has been set */
    public boolean hasNonmatchingQualifiers() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'nonmatching_qualifiers' field */
    public avro.java.gaia.add_object_response.Builder clearNonmatchingQualifiers() {
      nonmatching_qualifiers = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public add_object_response build() {
      try {
        add_object_response record = new add_object_response();
        record.OBJECT_ID = fieldSetFlags()[0] ? this.OBJECT_ID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.object_data = fieldSetFlags()[1] ? this.object_data : (java.nio.ByteBuffer) defaultValue(fields()[1]);
        record.object_data_str = fieldSetFlags()[2] ? this.object_data_str : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.object_encoding = fieldSetFlags()[3] ? this.object_encoding : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.set_id = fieldSetFlags()[4] ? this.set_id : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.matching_triggers = fieldSetFlags()[5] ? this.matching_triggers : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[5]);
        record.matching_qualifiers = fieldSetFlags()[6] ? this.matching_qualifiers : (java.util.List<java.lang.Double>) defaultValue(fields()[6]);
        record.nonmatching_triggers = fieldSetFlags()[7] ? this.nonmatching_triggers : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        record.nonmatching_qualifiers = fieldSetFlags()[8] ? this.nonmatching_qualifiers : (java.util.List<java.lang.Double>) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
