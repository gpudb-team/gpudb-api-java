/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gaia;  
@SuppressWarnings("all")
public class predicate_join_request extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"predicate_join_request\",\"namespace\":\"avro.java.gaia\",\"fields\":[{\"name\":\"left_set\",\"type\":\"string\"},{\"name\":\"right_set\",\"type\":\"string\"},{\"name\":\"common_type\",\"type\":\"string\"},{\"name\":\"result_type\",\"type\":\"string\"},{\"name\":\"result_set\",\"type\":\"string\"},{\"name\":\"user_auth_string\",\"type\":\"string\"},{\"name\":\"predicate\",\"type\":\"string\"}]}");
  @Deprecated public java.lang.CharSequence left_set;
  @Deprecated public java.lang.CharSequence right_set;
  @Deprecated public java.lang.CharSequence common_type;
  @Deprecated public java.lang.CharSequence result_type;
  @Deprecated public java.lang.CharSequence result_set;
  @Deprecated public java.lang.CharSequence user_auth_string;
  @Deprecated public java.lang.CharSequence predicate;

  /**
   * Default constructor.
   */
  public predicate_join_request() {}

  /**
   * All-args constructor.
   */
  public predicate_join_request(java.lang.CharSequence left_set, java.lang.CharSequence right_set, java.lang.CharSequence common_type, java.lang.CharSequence result_type, java.lang.CharSequence result_set, java.lang.CharSequence user_auth_string, java.lang.CharSequence predicate) {
    this.left_set = left_set;
    this.right_set = right_set;
    this.common_type = common_type;
    this.result_type = result_type;
    this.result_set = result_set;
    this.user_auth_string = user_auth_string;
    this.predicate = predicate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return left_set;
    case 1: return right_set;
    case 2: return common_type;
    case 3: return result_type;
    case 4: return result_set;
    case 5: return user_auth_string;
    case 6: return predicate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: left_set = (java.lang.CharSequence)value$; break;
    case 1: right_set = (java.lang.CharSequence)value$; break;
    case 2: common_type = (java.lang.CharSequence)value$; break;
    case 3: result_type = (java.lang.CharSequence)value$; break;
    case 4: result_set = (java.lang.CharSequence)value$; break;
    case 5: user_auth_string = (java.lang.CharSequence)value$; break;
    case 6: predicate = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'left_set' field.
   */
  public java.lang.CharSequence getLeftSet() {
    return left_set;
  }

  /**
   * Sets the value of the 'left_set' field.
   * @param value the value to set.
   */
  public void setLeftSet(java.lang.CharSequence value) {
    this.left_set = value;
  }

  /**
   * Gets the value of the 'right_set' field.
   */
  public java.lang.CharSequence getRightSet() {
    return right_set;
  }

  /**
   * Sets the value of the 'right_set' field.
   * @param value the value to set.
   */
  public void setRightSet(java.lang.CharSequence value) {
    this.right_set = value;
  }

  /**
   * Gets the value of the 'common_type' field.
   */
  public java.lang.CharSequence getCommonType() {
    return common_type;
  }

  /**
   * Sets the value of the 'common_type' field.
   * @param value the value to set.
   */
  public void setCommonType(java.lang.CharSequence value) {
    this.common_type = value;
  }

  /**
   * Gets the value of the 'result_type' field.
   */
  public java.lang.CharSequence getResultType() {
    return result_type;
  }

  /**
   * Sets the value of the 'result_type' field.
   * @param value the value to set.
   */
  public void setResultType(java.lang.CharSequence value) {
    this.result_type = value;
  }

  /**
   * Gets the value of the 'result_set' field.
   */
  public java.lang.CharSequence getResultSet() {
    return result_set;
  }

  /**
   * Sets the value of the 'result_set' field.
   * @param value the value to set.
   */
  public void setResultSet(java.lang.CharSequence value) {
    this.result_set = value;
  }

  /**
   * Gets the value of the 'user_auth_string' field.
   */
  public java.lang.CharSequence getUserAuthString() {
    return user_auth_string;
  }

  /**
   * Sets the value of the 'user_auth_string' field.
   * @param value the value to set.
   */
  public void setUserAuthString(java.lang.CharSequence value) {
    this.user_auth_string = value;
  }

  /**
   * Gets the value of the 'predicate' field.
   */
  public java.lang.CharSequence getPredicate() {
    return predicate;
  }

  /**
   * Sets the value of the 'predicate' field.
   * @param value the value to set.
   */
  public void setPredicate(java.lang.CharSequence value) {
    this.predicate = value;
  }

  /** Creates a new predicate_join_request RecordBuilder */
  public static avro.java.gaia.predicate_join_request.Builder newBuilder() {
    return new avro.java.gaia.predicate_join_request.Builder();
  }
  
  /** Creates a new predicate_join_request RecordBuilder by copying an existing Builder */
  public static avro.java.gaia.predicate_join_request.Builder newBuilder(avro.java.gaia.predicate_join_request.Builder other) {
    return new avro.java.gaia.predicate_join_request.Builder(other);
  }
  
  /** Creates a new predicate_join_request RecordBuilder by copying an existing predicate_join_request instance */
  public static avro.java.gaia.predicate_join_request.Builder newBuilder(avro.java.gaia.predicate_join_request other) {
    return new avro.java.gaia.predicate_join_request.Builder(other);
  }
  
  /**
   * RecordBuilder for predicate_join_request instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<predicate_join_request>
    implements org.apache.avro.data.RecordBuilder<predicate_join_request> {

    private java.lang.CharSequence left_set;
    private java.lang.CharSequence right_set;
    private java.lang.CharSequence common_type;
    private java.lang.CharSequence result_type;
    private java.lang.CharSequence result_set;
    private java.lang.CharSequence user_auth_string;
    private java.lang.CharSequence predicate;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gaia.predicate_join_request.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gaia.predicate_join_request.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing predicate_join_request instance */
    private Builder(avro.java.gaia.predicate_join_request other) {
            super(avro.java.gaia.predicate_join_request.SCHEMA$);
      if (isValidValue(fields()[0], other.left_set)) {
        this.left_set = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.left_set);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.right_set)) {
        this.right_set = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.right_set);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.common_type)) {
        this.common_type = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.common_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.result_type)) {
        this.result_type = (java.lang.CharSequence) data().deepCopy(fields()[3].schema(), other.result_type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.result_set)) {
        this.result_set = (java.lang.CharSequence) data().deepCopy(fields()[4].schema(), other.result_set);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.user_auth_string)) {
        this.user_auth_string = (java.lang.CharSequence) data().deepCopy(fields()[5].schema(), other.user_auth_string);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.predicate)) {
        this.predicate = (java.lang.CharSequence) data().deepCopy(fields()[6].schema(), other.predicate);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'left_set' field */
    public java.lang.CharSequence getLeftSet() {
      return left_set;
    }
    
    /** Sets the value of the 'left_set' field */
    public avro.java.gaia.predicate_join_request.Builder setLeftSet(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.left_set = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'left_set' field has been set */
    public boolean hasLeftSet() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'left_set' field */
    public avro.java.gaia.predicate_join_request.Builder clearLeftSet() {
      left_set = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'right_set' field */
    public java.lang.CharSequence getRightSet() {
      return right_set;
    }
    
    /** Sets the value of the 'right_set' field */
    public avro.java.gaia.predicate_join_request.Builder setRightSet(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.right_set = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'right_set' field has been set */
    public boolean hasRightSet() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'right_set' field */
    public avro.java.gaia.predicate_join_request.Builder clearRightSet() {
      right_set = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'common_type' field */
    public java.lang.CharSequence getCommonType() {
      return common_type;
    }
    
    /** Sets the value of the 'common_type' field */
    public avro.java.gaia.predicate_join_request.Builder setCommonType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.common_type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'common_type' field has been set */
    public boolean hasCommonType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'common_type' field */
    public avro.java.gaia.predicate_join_request.Builder clearCommonType() {
      common_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'result_type' field */
    public java.lang.CharSequence getResultType() {
      return result_type;
    }
    
    /** Sets the value of the 'result_type' field */
    public avro.java.gaia.predicate_join_request.Builder setResultType(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.result_type = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'result_type' field has been set */
    public boolean hasResultType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'result_type' field */
    public avro.java.gaia.predicate_join_request.Builder clearResultType() {
      result_type = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'result_set' field */
    public java.lang.CharSequence getResultSet() {
      return result_set;
    }
    
    /** Sets the value of the 'result_set' field */
    public avro.java.gaia.predicate_join_request.Builder setResultSet(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.result_set = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'result_set' field has been set */
    public boolean hasResultSet() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'result_set' field */
    public avro.java.gaia.predicate_join_request.Builder clearResultSet() {
      result_set = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'user_auth_string' field */
    public java.lang.CharSequence getUserAuthString() {
      return user_auth_string;
    }
    
    /** Sets the value of the 'user_auth_string' field */
    public avro.java.gaia.predicate_join_request.Builder setUserAuthString(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.user_auth_string = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'user_auth_string' field has been set */
    public boolean hasUserAuthString() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'user_auth_string' field */
    public avro.java.gaia.predicate_join_request.Builder clearUserAuthString() {
      user_auth_string = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'predicate' field */
    public java.lang.CharSequence getPredicate() {
      return predicate;
    }
    
    /** Sets the value of the 'predicate' field */
    public avro.java.gaia.predicate_join_request.Builder setPredicate(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.predicate = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'predicate' field has been set */
    public boolean hasPredicate() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'predicate' field */
    public avro.java.gaia.predicate_join_request.Builder clearPredicate() {
      predicate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public predicate_join_request build() {
      try {
        predicate_join_request record = new predicate_join_request();
        record.left_set = fieldSetFlags()[0] ? this.left_set : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.right_set = fieldSetFlags()[1] ? this.right_set : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.common_type = fieldSetFlags()[2] ? this.common_type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.result_type = fieldSetFlags()[3] ? this.result_type : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.result_set = fieldSetFlags()[4] ? this.result_set : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.user_auth_string = fieldSetFlags()[5] ? this.user_auth_string : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.predicate = fieldSetFlags()[6] ? this.predicate : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
