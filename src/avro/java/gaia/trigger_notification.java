/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gaia;  
@SuppressWarnings("all")
public class trigger_notification extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"trigger_notification\",\"namespace\":\"avro.java.gaia\",\"fields\":[{\"name\":\"object_data\",\"type\":\"bytes\"},{\"name\":\"object_data_str\",\"type\":\"string\"},{\"name\":\"trigger_id\",\"type\":\"string\"},{\"name\":\"set_id\",\"type\":\"string\"}]}");
  @Deprecated public java.nio.ByteBuffer object_data;
  @Deprecated public java.lang.CharSequence object_data_str;
  @Deprecated public java.lang.CharSequence trigger_id;
  @Deprecated public java.lang.CharSequence set_id;

  /**
   * Default constructor.
   */
  public trigger_notification() {}

  /**
   * All-args constructor.
   */
  public trigger_notification(java.nio.ByteBuffer object_data, java.lang.CharSequence object_data_str, java.lang.CharSequence trigger_id, java.lang.CharSequence set_id) {
    this.object_data = object_data;
    this.object_data_str = object_data_str;
    this.trigger_id = trigger_id;
    this.set_id = set_id;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return object_data;
    case 1: return object_data_str;
    case 2: return trigger_id;
    case 3: return set_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: object_data = (java.nio.ByteBuffer)value$; break;
    case 1: object_data_str = (java.lang.CharSequence)value$; break;
    case 2: trigger_id = (java.lang.CharSequence)value$; break;
    case 3: set_id = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'object_data' field.
   */
  public java.nio.ByteBuffer getObjectData() {
    return object_data;
  }

  /**
   * Sets the value of the 'object_data' field.
   * @param value the value to set.
   */
  public void setObjectData(java.nio.ByteBuffer value) {
    this.object_data = value;
  }

  /**
   * Gets the value of the 'object_data_str' field.
   */
  public java.lang.CharSequence getObjectDataStr() {
    return object_data_str;
  }

  /**
   * Sets the value of the 'object_data_str' field.
   * @param value the value to set.
   */
  public void setObjectDataStr(java.lang.CharSequence value) {
    this.object_data_str = value;
  }

  /**
   * Gets the value of the 'trigger_id' field.
   */
  public java.lang.CharSequence getTriggerId() {
    return trigger_id;
  }

  /**
   * Sets the value of the 'trigger_id' field.
   * @param value the value to set.
   */
  public void setTriggerId(java.lang.CharSequence value) {
    this.trigger_id = value;
  }

  /**
   * Gets the value of the 'set_id' field.
   */
  public java.lang.CharSequence getSetId() {
    return set_id;
  }

  /**
   * Sets the value of the 'set_id' field.
   * @param value the value to set.
   */
  public void setSetId(java.lang.CharSequence value) {
    this.set_id = value;
  }

  /** Creates a new trigger_notification RecordBuilder */
  public static avro.java.gaia.trigger_notification.Builder newBuilder() {
    return new avro.java.gaia.trigger_notification.Builder();
  }
  
  /** Creates a new trigger_notification RecordBuilder by copying an existing Builder */
  public static avro.java.gaia.trigger_notification.Builder newBuilder(avro.java.gaia.trigger_notification.Builder other) {
    return new avro.java.gaia.trigger_notification.Builder(other);
  }
  
  /** Creates a new trigger_notification RecordBuilder by copying an existing trigger_notification instance */
  public static avro.java.gaia.trigger_notification.Builder newBuilder(avro.java.gaia.trigger_notification other) {
    return new avro.java.gaia.trigger_notification.Builder(other);
  }
  
  /**
   * RecordBuilder for trigger_notification instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<trigger_notification>
    implements org.apache.avro.data.RecordBuilder<trigger_notification> {

    private java.nio.ByteBuffer object_data;
    private java.lang.CharSequence object_data_str;
    private java.lang.CharSequence trigger_id;
    private java.lang.CharSequence set_id;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gaia.trigger_notification.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gaia.trigger_notification.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing trigger_notification instance */
    private Builder(avro.java.gaia.trigger_notification other) {
            super(avro.java.gaia.trigger_notification.SCHEMA$);
      if (isValidValue(fields()[0], other.object_data)) {
        this.object_data = (java.nio.ByteBuffer) data().deepCopy(fields()[0].schema(), other.object_data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.object_data_str)) {
        this.object_data_str = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.object_data_str);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.trigger_id)) {
        this.trigger_id = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.trigger_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.set_id)) {
        this.set_id = (java.lang.CharSequence) data().deepCopy(fields()[3].schema(), other.set_id);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'object_data' field */
    public java.nio.ByteBuffer getObjectData() {
      return object_data;
    }
    
    /** Sets the value of the 'object_data' field */
    public avro.java.gaia.trigger_notification.Builder setObjectData(java.nio.ByteBuffer value) {
      validate(fields()[0], value);
      this.object_data = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'object_data' field has been set */
    public boolean hasObjectData() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'object_data' field */
    public avro.java.gaia.trigger_notification.Builder clearObjectData() {
      object_data = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'object_data_str' field */
    public java.lang.CharSequence getObjectDataStr() {
      return object_data_str;
    }
    
    /** Sets the value of the 'object_data_str' field */
    public avro.java.gaia.trigger_notification.Builder setObjectDataStr(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.object_data_str = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'object_data_str' field has been set */
    public boolean hasObjectDataStr() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'object_data_str' field */
    public avro.java.gaia.trigger_notification.Builder clearObjectDataStr() {
      object_data_str = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'trigger_id' field */
    public java.lang.CharSequence getTriggerId() {
      return trigger_id;
    }
    
    /** Sets the value of the 'trigger_id' field */
    public avro.java.gaia.trigger_notification.Builder setTriggerId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.trigger_id = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'trigger_id' field has been set */
    public boolean hasTriggerId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'trigger_id' field */
    public avro.java.gaia.trigger_notification.Builder clearTriggerId() {
      trigger_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'set_id' field */
    public java.lang.CharSequence getSetId() {
      return set_id;
    }
    
    /** Sets the value of the 'set_id' field */
    public avro.java.gaia.trigger_notification.Builder setSetId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.set_id = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'set_id' field has been set */
    public boolean hasSetId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'set_id' field */
    public avro.java.gaia.trigger_notification.Builder clearSetId() {
      set_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public trigger_notification build() {
      try {
        trigger_notification record = new trigger_notification();
        record.object_data = fieldSetFlags()[0] ? this.object_data : (java.nio.ByteBuffer) defaultValue(fields()[0]);
        record.object_data_str = fieldSetFlags()[1] ? this.object_data_str : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.trigger_id = fieldSetFlags()[2] ? this.trigger_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.set_id = fieldSetFlags()[3] ? this.set_id : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
