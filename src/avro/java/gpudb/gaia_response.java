/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gpudb;  
@SuppressWarnings("all")
public class gaia_response extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"gaia_response\",\"namespace\":\"avro.java.gpudb\",\"fields\":[{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"data_type\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_str\",\"type\":\"string\"}]}");
  @Deprecated public java.lang.CharSequence status;
  @Deprecated public java.lang.CharSequence message;
  @Deprecated public java.lang.CharSequence data_type;
  @Deprecated public java.nio.ByteBuffer data;
  @Deprecated public java.lang.CharSequence data_str;

  /**
   * Default constructor.
   */
  public gaia_response() {}

  /**
   * All-args constructor.
   */
  public gaia_response(java.lang.CharSequence status, java.lang.CharSequence message, java.lang.CharSequence data_type, java.nio.ByteBuffer data, java.lang.CharSequence data_str) {
    this.status = status;
    this.message = message;
    this.data_type = data_type;
    this.data = data;
    this.data_str = data_str;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return status;
    case 1: return message;
    case 2: return data_type;
    case 3: return data;
    case 4: return data_str;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: status = (java.lang.CharSequence)value$; break;
    case 1: message = (java.lang.CharSequence)value$; break;
    case 2: data_type = (java.lang.CharSequence)value$; break;
    case 3: data = (java.nio.ByteBuffer)value$; break;
    case 4: data_str = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'message' field.
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }

  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'data_type' field.
   */
  public java.lang.CharSequence getDataType() {
    return data_type;
  }

  /**
   * Sets the value of the 'data_type' field.
   * @param value the value to set.
   */
  public void setDataType(java.lang.CharSequence value) {
    this.data_type = value;
  }

  /**
   * Gets the value of the 'data' field.
   */
  public java.nio.ByteBuffer getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(java.nio.ByteBuffer value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'data_str' field.
   */
  public java.lang.CharSequence getDataStr() {
    return data_str;
  }

  /**
   * Sets the value of the 'data_str' field.
   * @param value the value to set.
   */
  public void setDataStr(java.lang.CharSequence value) {
    this.data_str = value;
  }

  /** Creates a new gaia_response RecordBuilder */
  public static avro.java.gpudb.gaia_response.Builder newBuilder() {
    return new avro.java.gpudb.gaia_response.Builder();
  }
  
  /** Creates a new gaia_response RecordBuilder by copying an existing Builder */
  public static avro.java.gpudb.gaia_response.Builder newBuilder(avro.java.gpudb.gaia_response.Builder other) {
    return new avro.java.gpudb.gaia_response.Builder(other);
  }
  
  /** Creates a new gaia_response RecordBuilder by copying an existing gaia_response instance */
  public static avro.java.gpudb.gaia_response.Builder newBuilder(avro.java.gpudb.gaia_response other) {
    return new avro.java.gpudb.gaia_response.Builder(other);
  }
  
  /**
   * RecordBuilder for gaia_response instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<gaia_response>
    implements org.apache.avro.data.RecordBuilder<gaia_response> {

    private java.lang.CharSequence status;
    private java.lang.CharSequence message;
    private java.lang.CharSequence data_type;
    private java.nio.ByteBuffer data;
    private java.lang.CharSequence data_str;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gpudb.gaia_response.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gpudb.gaia_response.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing gaia_response instance */
    private Builder(avro.java.gpudb.gaia_response other) {
            super(avro.java.gpudb.gaia_response.SCHEMA$);
      if (isValidValue(fields()[0], other.status)) {
        this.status = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.status);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.data_type)) {
        this.data_type = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.data_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.data)) {
        this.data = (java.nio.ByteBuffer) data().deepCopy(fields()[3].schema(), other.data);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.data_str)) {
        this.data_str = (java.lang.CharSequence) data().deepCopy(fields()[4].schema(), other.data_str);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'status' field */
    public java.lang.CharSequence getStatus() {
      return status;
    }
    
    /** Sets the value of the 'status' field */
    public avro.java.gpudb.gaia_response.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.status = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'status' field has been set */
    public boolean hasStatus() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'status' field */
    public avro.java.gpudb.gaia_response.Builder clearStatus() {
      status = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'message' field */
    public java.lang.CharSequence getMessage() {
      return message;
    }
    
    /** Sets the value of the 'message' field */
    public avro.java.gpudb.gaia_response.Builder setMessage(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.message = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'message' field has been set */
    public boolean hasMessage() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'message' field */
    public avro.java.gpudb.gaia_response.Builder clearMessage() {
      message = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'data_type' field */
    public java.lang.CharSequence getDataType() {
      return data_type;
    }
    
    /** Sets the value of the 'data_type' field */
    public avro.java.gpudb.gaia_response.Builder setDataType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.data_type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'data_type' field has been set */
    public boolean hasDataType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'data_type' field */
    public avro.java.gpudb.gaia_response.Builder clearDataType() {
      data_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'data' field */
    public java.nio.ByteBuffer getData() {
      return data;
    }
    
    /** Sets the value of the 'data' field */
    public avro.java.gpudb.gaia_response.Builder setData(java.nio.ByteBuffer value) {
      validate(fields()[3], value);
      this.data = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'data' field has been set */
    public boolean hasData() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'data' field */
    public avro.java.gpudb.gaia_response.Builder clearData() {
      data = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'data_str' field */
    public java.lang.CharSequence getDataStr() {
      return data_str;
    }
    
    /** Sets the value of the 'data_str' field */
    public avro.java.gpudb.gaia_response.Builder setDataStr(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.data_str = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'data_str' field has been set */
    public boolean hasDataStr() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'data_str' field */
    public avro.java.gpudb.gaia_response.Builder clearDataStr() {
      data_str = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public gaia_response build() {
      try {
        gaia_response record = new gaia_response();
        record.status = fieldSetFlags()[0] ? this.status : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.message = fieldSetFlags()[1] ? this.message : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.data_type = fieldSetFlags()[2] ? this.data_type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.data = fieldSetFlags()[3] ? this.data : (java.nio.ByteBuffer) defaultValue(fields()[3]);
        record.data_str = fieldSetFlags()[4] ? this.data_str : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
