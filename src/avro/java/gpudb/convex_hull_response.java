/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gpudb;  
@SuppressWarnings("all")
public class convex_hull_response extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"convex_hull_response\",\"namespace\":\"avro.java.gpudb\",\"fields\":[{\"name\":\"x_vector\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"y_vector\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"is_valid\",\"type\":\"boolean\"}]}");
  @Deprecated public java.util.List<java.lang.Double> x_vector;
  @Deprecated public java.util.List<java.lang.Double> y_vector;
  @Deprecated public int count;
  @Deprecated public boolean is_valid;

  /**
   * Default constructor.
   */
  public convex_hull_response() {}

  /**
   * All-args constructor.
   */
  public convex_hull_response(java.util.List<java.lang.Double> x_vector, java.util.List<java.lang.Double> y_vector, java.lang.Integer count, java.lang.Boolean is_valid) {
    this.x_vector = x_vector;
    this.y_vector = y_vector;
    this.count = count;
    this.is_valid = is_valid;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return x_vector;
    case 1: return y_vector;
    case 2: return count;
    case 3: return is_valid;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: x_vector = (java.util.List<java.lang.Double>)value$; break;
    case 1: y_vector = (java.util.List<java.lang.Double>)value$; break;
    case 2: count = (java.lang.Integer)value$; break;
    case 3: is_valid = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'x_vector' field.
   */
  public java.util.List<java.lang.Double> getXVector() {
    return x_vector;
  }

  /**
   * Sets the value of the 'x_vector' field.
   * @param value the value to set.
   */
  public void setXVector(java.util.List<java.lang.Double> value) {
    this.x_vector = value;
  }

  /**
   * Gets the value of the 'y_vector' field.
   */
  public java.util.List<java.lang.Double> getYVector() {
    return y_vector;
  }

  /**
   * Sets the value of the 'y_vector' field.
   * @param value the value to set.
   */
  public void setYVector(java.util.List<java.lang.Double> value) {
    this.y_vector = value;
  }

  /**
   * Gets the value of the 'count' field.
   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * @param value the value to set.
   */
  public void setCount(java.lang.Integer value) {
    this.count = value;
  }

  /**
   * Gets the value of the 'is_valid' field.
   */
  public java.lang.Boolean getIsValid() {
    return is_valid;
  }

  /**
   * Sets the value of the 'is_valid' field.
   * @param value the value to set.
   */
  public void setIsValid(java.lang.Boolean value) {
    this.is_valid = value;
  }

  /** Creates a new convex_hull_response RecordBuilder */
  public static avro.java.gpudb.convex_hull_response.Builder newBuilder() {
    return new avro.java.gpudb.convex_hull_response.Builder();
  }
  
  /** Creates a new convex_hull_response RecordBuilder by copying an existing Builder */
  public static avro.java.gpudb.convex_hull_response.Builder newBuilder(avro.java.gpudb.convex_hull_response.Builder other) {
    return new avro.java.gpudb.convex_hull_response.Builder(other);
  }
  
  /** Creates a new convex_hull_response RecordBuilder by copying an existing convex_hull_response instance */
  public static avro.java.gpudb.convex_hull_response.Builder newBuilder(avro.java.gpudb.convex_hull_response other) {
    return new avro.java.gpudb.convex_hull_response.Builder(other);
  }
  
  /**
   * RecordBuilder for convex_hull_response instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<convex_hull_response>
    implements org.apache.avro.data.RecordBuilder<convex_hull_response> {

    private java.util.List<java.lang.Double> x_vector;
    private java.util.List<java.lang.Double> y_vector;
    private int count;
    private boolean is_valid;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gpudb.convex_hull_response.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gpudb.convex_hull_response.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing convex_hull_response instance */
    private Builder(avro.java.gpudb.convex_hull_response other) {
            super(avro.java.gpudb.convex_hull_response.SCHEMA$);
      if (isValidValue(fields()[0], other.x_vector)) {
        this.x_vector = (java.util.List<java.lang.Double>) data().deepCopy(fields()[0].schema(), other.x_vector);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.y_vector)) {
        this.y_vector = (java.util.List<java.lang.Double>) data().deepCopy(fields()[1].schema(), other.y_vector);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count)) {
        this.count = (java.lang.Integer) data().deepCopy(fields()[2].schema(), other.count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.is_valid)) {
        this.is_valid = (java.lang.Boolean) data().deepCopy(fields()[3].schema(), other.is_valid);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'x_vector' field */
    public java.util.List<java.lang.Double> getXVector() {
      return x_vector;
    }
    
    /** Sets the value of the 'x_vector' field */
    public avro.java.gpudb.convex_hull_response.Builder setXVector(java.util.List<java.lang.Double> value) {
      validate(fields()[0], value);
      this.x_vector = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'x_vector' field has been set */
    public boolean hasXVector() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'x_vector' field */
    public avro.java.gpudb.convex_hull_response.Builder clearXVector() {
      x_vector = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'y_vector' field */
    public java.util.List<java.lang.Double> getYVector() {
      return y_vector;
    }
    
    /** Sets the value of the 'y_vector' field */
    public avro.java.gpudb.convex_hull_response.Builder setYVector(java.util.List<java.lang.Double> value) {
      validate(fields()[1], value);
      this.y_vector = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'y_vector' field has been set */
    public boolean hasYVector() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'y_vector' field */
    public avro.java.gpudb.convex_hull_response.Builder clearYVector() {
      y_vector = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Integer getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public avro.java.gpudb.convex_hull_response.Builder setCount(int value) {
      validate(fields()[2], value);
      this.count = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'count' field */
    public avro.java.gpudb.convex_hull_response.Builder clearCount() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'is_valid' field */
    public java.lang.Boolean getIsValid() {
      return is_valid;
    }
    
    /** Sets the value of the 'is_valid' field */
    public avro.java.gpudb.convex_hull_response.Builder setIsValid(boolean value) {
      validate(fields()[3], value);
      this.is_valid = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'is_valid' field has been set */
    public boolean hasIsValid() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'is_valid' field */
    public avro.java.gpudb.convex_hull_response.Builder clearIsValid() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public convex_hull_response build() {
      try {
        convex_hull_response record = new convex_hull_response();
        record.x_vector = fieldSetFlags()[0] ? this.x_vector : (java.util.List<java.lang.Double>) defaultValue(fields()[0]);
        record.y_vector = fieldSetFlags()[1] ? this.y_vector : (java.util.List<java.lang.Double>) defaultValue(fields()[1]);
        record.count = fieldSetFlags()[2] ? this.count : (java.lang.Integer) defaultValue(fields()[2]);
        record.is_valid = fieldSetFlags()[3] ? this.is_valid : (java.lang.Boolean) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
