/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gpudb;  
@SuppressWarnings("all")
public class group_by_value_response extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"group_by_value_response\",\"namespace\":\"avro.java.gpudb\",\"fields\":[{\"name\":\"set_id\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"value_attribute\",\"type\":\"string\"},{\"name\":\"count_map\",\"type\":{\"type\":\"map\",\"values\":\"double\"}}]}");
  @Deprecated public java.lang.CharSequence set_id;
  @Deprecated public java.util.List<java.lang.CharSequence> attributes;
  @Deprecated public java.lang.CharSequence value_attribute;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Double> count_map;

  /**
   * Default constructor.
   */
  public group_by_value_response() {}

  /**
   * All-args constructor.
   */
  public group_by_value_response(java.lang.CharSequence set_id, java.util.List<java.lang.CharSequence> attributes, java.lang.CharSequence value_attribute, java.util.Map<java.lang.CharSequence,java.lang.Double> count_map) {
    this.set_id = set_id;
    this.attributes = attributes;
    this.value_attribute = value_attribute;
    this.count_map = count_map;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return set_id;
    case 1: return attributes;
    case 2: return value_attribute;
    case 3: return count_map;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: set_id = (java.lang.CharSequence)value$; break;
    case 1: attributes = (java.util.List<java.lang.CharSequence>)value$; break;
    case 2: value_attribute = (java.lang.CharSequence)value$; break;
    case 3: count_map = (java.util.Map<java.lang.CharSequence,java.lang.Double>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'set_id' field.
   */
  public java.lang.CharSequence getSetId() {
    return set_id;
  }

  /**
   * Sets the value of the 'set_id' field.
   * @param value the value to set.
   */
  public void setSetId(java.lang.CharSequence value) {
    this.set_id = value;
  }

  /**
   * Gets the value of the 'attributes' field.
   */
  public java.util.List<java.lang.CharSequence> getAttributes() {
    return attributes;
  }

  /**
   * Sets the value of the 'attributes' field.
   * @param value the value to set.
   */
  public void setAttributes(java.util.List<java.lang.CharSequence> value) {
    this.attributes = value;
  }

  /**
   * Gets the value of the 'value_attribute' field.
   */
  public java.lang.CharSequence getValueAttribute() {
    return value_attribute;
  }

  /**
   * Sets the value of the 'value_attribute' field.
   * @param value the value to set.
   */
  public void setValueAttribute(java.lang.CharSequence value) {
    this.value_attribute = value;
  }

  /**
   * Gets the value of the 'count_map' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Double> getCountMap() {
    return count_map;
  }

  /**
   * Sets the value of the 'count_map' field.
   * @param value the value to set.
   */
  public void setCountMap(java.util.Map<java.lang.CharSequence,java.lang.Double> value) {
    this.count_map = value;
  }

  /** Creates a new group_by_value_response RecordBuilder */
  public static avro.java.gpudb.group_by_value_response.Builder newBuilder() {
    return new avro.java.gpudb.group_by_value_response.Builder();
  }
  
  /** Creates a new group_by_value_response RecordBuilder by copying an existing Builder */
  public static avro.java.gpudb.group_by_value_response.Builder newBuilder(avro.java.gpudb.group_by_value_response.Builder other) {
    return new avro.java.gpudb.group_by_value_response.Builder(other);
  }
  
  /** Creates a new group_by_value_response RecordBuilder by copying an existing group_by_value_response instance */
  public static avro.java.gpudb.group_by_value_response.Builder newBuilder(avro.java.gpudb.group_by_value_response other) {
    return new avro.java.gpudb.group_by_value_response.Builder(other);
  }
  
  /**
   * RecordBuilder for group_by_value_response instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<group_by_value_response>
    implements org.apache.avro.data.RecordBuilder<group_by_value_response> {

    private java.lang.CharSequence set_id;
    private java.util.List<java.lang.CharSequence> attributes;
    private java.lang.CharSequence value_attribute;
    private java.util.Map<java.lang.CharSequence,java.lang.Double> count_map;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gpudb.group_by_value_response.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gpudb.group_by_value_response.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing group_by_value_response instance */
    private Builder(avro.java.gpudb.group_by_value_response other) {
            super(avro.java.gpudb.group_by_value_response.SCHEMA$);
      if (isValidValue(fields()[0], other.set_id)) {
        this.set_id = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.set_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributes)) {
        this.attributes = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[1].schema(), other.attributes);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.value_attribute)) {
        this.value_attribute = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.value_attribute);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.count_map)) {
        this.count_map = (java.util.Map<java.lang.CharSequence,java.lang.Double>) data().deepCopy(fields()[3].schema(), other.count_map);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'set_id' field */
    public java.lang.CharSequence getSetId() {
      return set_id;
    }
    
    /** Sets the value of the 'set_id' field */
    public avro.java.gpudb.group_by_value_response.Builder setSetId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.set_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'set_id' field has been set */
    public boolean hasSetId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'set_id' field */
    public avro.java.gpudb.group_by_value_response.Builder clearSetId() {
      set_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'attributes' field */
    public java.util.List<java.lang.CharSequence> getAttributes() {
      return attributes;
    }
    
    /** Sets the value of the 'attributes' field */
    public avro.java.gpudb.group_by_value_response.Builder setAttributes(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.attributes = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'attributes' field has been set */
    public boolean hasAttributes() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'attributes' field */
    public avro.java.gpudb.group_by_value_response.Builder clearAttributes() {
      attributes = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'value_attribute' field */
    public java.lang.CharSequence getValueAttribute() {
      return value_attribute;
    }
    
    /** Sets the value of the 'value_attribute' field */
    public avro.java.gpudb.group_by_value_response.Builder setValueAttribute(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.value_attribute = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'value_attribute' field has been set */
    public boolean hasValueAttribute() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'value_attribute' field */
    public avro.java.gpudb.group_by_value_response.Builder clearValueAttribute() {
      value_attribute = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'count_map' field */
    public java.util.Map<java.lang.CharSequence,java.lang.Double> getCountMap() {
      return count_map;
    }
    
    /** Sets the value of the 'count_map' field */
    public avro.java.gpudb.group_by_value_response.Builder setCountMap(java.util.Map<java.lang.CharSequence,java.lang.Double> value) {
      validate(fields()[3], value);
      this.count_map = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'count_map' field has been set */
    public boolean hasCountMap() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'count_map' field */
    public avro.java.gpudb.group_by_value_response.Builder clearCountMap() {
      count_map = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public group_by_value_response build() {
      try {
        group_by_value_response record = new group_by_value_response();
        record.set_id = fieldSetFlags()[0] ? this.set_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.attributes = fieldSetFlags()[1] ? this.attributes : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        record.value_attribute = fieldSetFlags()[2] ? this.value_attribute : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.count_map = fieldSetFlags()[3] ? this.count_map : (java.util.Map<java.lang.CharSequence,java.lang.Double>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
