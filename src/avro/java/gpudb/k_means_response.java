/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gpudb;  
@SuppressWarnings("all")
public class k_means_response extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"k_means_response\",\"namespace\":\"avro.java.gpudb\",\"fields\":[{\"name\":\"means\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}},{\"name\":\"counts\",\"type\":{\"type\":\"array\",\"items\":\"long\"}},{\"name\":\"rms_dists\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"count\",\"type\":\"long\"},{\"name\":\"rms_dist\",\"type\":\"double\"},{\"name\":\"tolerance\",\"type\":\"double\"},{\"name\":\"num_iters\",\"type\":\"int\"}]}");
  @Deprecated public java.util.List<java.util.List<java.lang.Double>> means;
  @Deprecated public java.util.List<java.lang.Long> counts;
  @Deprecated public java.util.List<java.lang.Double> rms_dists;
  @Deprecated public long count;
  @Deprecated public double rms_dist;
  @Deprecated public double tolerance;
  @Deprecated public int num_iters;

  /**
   * Default constructor.
   */
  public k_means_response() {}

  /**
   * All-args constructor.
   */
  public k_means_response(java.util.List<java.util.List<java.lang.Double>> means, java.util.List<java.lang.Long> counts, java.util.List<java.lang.Double> rms_dists, java.lang.Long count, java.lang.Double rms_dist, java.lang.Double tolerance, java.lang.Integer num_iters) {
    this.means = means;
    this.counts = counts;
    this.rms_dists = rms_dists;
    this.count = count;
    this.rms_dist = rms_dist;
    this.tolerance = tolerance;
    this.num_iters = num_iters;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return means;
    case 1: return counts;
    case 2: return rms_dists;
    case 3: return count;
    case 4: return rms_dist;
    case 5: return tolerance;
    case 6: return num_iters;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: means = (java.util.List<java.util.List<java.lang.Double>>)value$; break;
    case 1: counts = (java.util.List<java.lang.Long>)value$; break;
    case 2: rms_dists = (java.util.List<java.lang.Double>)value$; break;
    case 3: count = (java.lang.Long)value$; break;
    case 4: rms_dist = (java.lang.Double)value$; break;
    case 5: tolerance = (java.lang.Double)value$; break;
    case 6: num_iters = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'means' field.
   */
  public java.util.List<java.util.List<java.lang.Double>> getMeans() {
    return means;
  }

  /**
   * Sets the value of the 'means' field.
   * @param value the value to set.
   */
  public void setMeans(java.util.List<java.util.List<java.lang.Double>> value) {
    this.means = value;
  }

  /**
   * Gets the value of the 'counts' field.
   */
  public java.util.List<java.lang.Long> getCounts() {
    return counts;
  }

  /**
   * Sets the value of the 'counts' field.
   * @param value the value to set.
   */
  public void setCounts(java.util.List<java.lang.Long> value) {
    this.counts = value;
  }

  /**
   * Gets the value of the 'rms_dists' field.
   */
  public java.util.List<java.lang.Double> getRmsDists() {
    return rms_dists;
  }

  /**
   * Sets the value of the 'rms_dists' field.
   * @param value the value to set.
   */
  public void setRmsDists(java.util.List<java.lang.Double> value) {
    this.rms_dists = value;
  }

  /**
   * Gets the value of the 'count' field.
   */
  public java.lang.Long getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * @param value the value to set.
   */
  public void setCount(java.lang.Long value) {
    this.count = value;
  }

  /**
   * Gets the value of the 'rms_dist' field.
   */
  public java.lang.Double getRmsDist() {
    return rms_dist;
  }

  /**
   * Sets the value of the 'rms_dist' field.
   * @param value the value to set.
   */
  public void setRmsDist(java.lang.Double value) {
    this.rms_dist = value;
  }

  /**
   * Gets the value of the 'tolerance' field.
   */
  public java.lang.Double getTolerance() {
    return tolerance;
  }

  /**
   * Sets the value of the 'tolerance' field.
   * @param value the value to set.
   */
  public void setTolerance(java.lang.Double value) {
    this.tolerance = value;
  }

  /**
   * Gets the value of the 'num_iters' field.
   */
  public java.lang.Integer getNumIters() {
    return num_iters;
  }

  /**
   * Sets the value of the 'num_iters' field.
   * @param value the value to set.
   */
  public void setNumIters(java.lang.Integer value) {
    this.num_iters = value;
  }

  /** Creates a new k_means_response RecordBuilder */
  public static avro.java.gpudb.k_means_response.Builder newBuilder() {
    return new avro.java.gpudb.k_means_response.Builder();
  }
  
  /** Creates a new k_means_response RecordBuilder by copying an existing Builder */
  public static avro.java.gpudb.k_means_response.Builder newBuilder(avro.java.gpudb.k_means_response.Builder other) {
    return new avro.java.gpudb.k_means_response.Builder(other);
  }
  
  /** Creates a new k_means_response RecordBuilder by copying an existing k_means_response instance */
  public static avro.java.gpudb.k_means_response.Builder newBuilder(avro.java.gpudb.k_means_response other) {
    return new avro.java.gpudb.k_means_response.Builder(other);
  }
  
  /**
   * RecordBuilder for k_means_response instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<k_means_response>
    implements org.apache.avro.data.RecordBuilder<k_means_response> {

    private java.util.List<java.util.List<java.lang.Double>> means;
    private java.util.List<java.lang.Long> counts;
    private java.util.List<java.lang.Double> rms_dists;
    private long count;
    private double rms_dist;
    private double tolerance;
    private int num_iters;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gpudb.k_means_response.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gpudb.k_means_response.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing k_means_response instance */
    private Builder(avro.java.gpudb.k_means_response other) {
            super(avro.java.gpudb.k_means_response.SCHEMA$);
      if (isValidValue(fields()[0], other.means)) {
        this.means = (java.util.List<java.util.List<java.lang.Double>>) data().deepCopy(fields()[0].schema(), other.means);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.counts)) {
        this.counts = (java.util.List<java.lang.Long>) data().deepCopy(fields()[1].schema(), other.counts);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.rms_dists)) {
        this.rms_dists = (java.util.List<java.lang.Double>) data().deepCopy(fields()[2].schema(), other.rms_dists);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.count)) {
        this.count = (java.lang.Long) data().deepCopy(fields()[3].schema(), other.count);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rms_dist)) {
        this.rms_dist = (java.lang.Double) data().deepCopy(fields()[4].schema(), other.rms_dist);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tolerance)) {
        this.tolerance = (java.lang.Double) data().deepCopy(fields()[5].schema(), other.tolerance);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.num_iters)) {
        this.num_iters = (java.lang.Integer) data().deepCopy(fields()[6].schema(), other.num_iters);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'means' field */
    public java.util.List<java.util.List<java.lang.Double>> getMeans() {
      return means;
    }
    
    /** Sets the value of the 'means' field */
    public avro.java.gpudb.k_means_response.Builder setMeans(java.util.List<java.util.List<java.lang.Double>> value) {
      validate(fields()[0], value);
      this.means = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'means' field has been set */
    public boolean hasMeans() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'means' field */
    public avro.java.gpudb.k_means_response.Builder clearMeans() {
      means = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'counts' field */
    public java.util.List<java.lang.Long> getCounts() {
      return counts;
    }
    
    /** Sets the value of the 'counts' field */
    public avro.java.gpudb.k_means_response.Builder setCounts(java.util.List<java.lang.Long> value) {
      validate(fields()[1], value);
      this.counts = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'counts' field has been set */
    public boolean hasCounts() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'counts' field */
    public avro.java.gpudb.k_means_response.Builder clearCounts() {
      counts = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'rms_dists' field */
    public java.util.List<java.lang.Double> getRmsDists() {
      return rms_dists;
    }
    
    /** Sets the value of the 'rms_dists' field */
    public avro.java.gpudb.k_means_response.Builder setRmsDists(java.util.List<java.lang.Double> value) {
      validate(fields()[2], value);
      this.rms_dists = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'rms_dists' field has been set */
    public boolean hasRmsDists() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'rms_dists' field */
    public avro.java.gpudb.k_means_response.Builder clearRmsDists() {
      rms_dists = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Long getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public avro.java.gpudb.k_means_response.Builder setCount(long value) {
      validate(fields()[3], value);
      this.count = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'count' field */
    public avro.java.gpudb.k_means_response.Builder clearCount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'rms_dist' field */
    public java.lang.Double getRmsDist() {
      return rms_dist;
    }
    
    /** Sets the value of the 'rms_dist' field */
    public avro.java.gpudb.k_means_response.Builder setRmsDist(double value) {
      validate(fields()[4], value);
      this.rms_dist = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'rms_dist' field has been set */
    public boolean hasRmsDist() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'rms_dist' field */
    public avro.java.gpudb.k_means_response.Builder clearRmsDist() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'tolerance' field */
    public java.lang.Double getTolerance() {
      return tolerance;
    }
    
    /** Sets the value of the 'tolerance' field */
    public avro.java.gpudb.k_means_response.Builder setTolerance(double value) {
      validate(fields()[5], value);
      this.tolerance = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'tolerance' field has been set */
    public boolean hasTolerance() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'tolerance' field */
    public avro.java.gpudb.k_means_response.Builder clearTolerance() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'num_iters' field */
    public java.lang.Integer getNumIters() {
      return num_iters;
    }
    
    /** Sets the value of the 'num_iters' field */
    public avro.java.gpudb.k_means_response.Builder setNumIters(int value) {
      validate(fields()[6], value);
      this.num_iters = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'num_iters' field has been set */
    public boolean hasNumIters() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'num_iters' field */
    public avro.java.gpudb.k_means_response.Builder clearNumIters() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public k_means_response build() {
      try {
        k_means_response record = new k_means_response();
        record.means = fieldSetFlags()[0] ? this.means : (java.util.List<java.util.List<java.lang.Double>>) defaultValue(fields()[0]);
        record.counts = fieldSetFlags()[1] ? this.counts : (java.util.List<java.lang.Long>) defaultValue(fields()[1]);
        record.rms_dists = fieldSetFlags()[2] ? this.rms_dists : (java.util.List<java.lang.Double>) defaultValue(fields()[2]);
        record.count = fieldSetFlags()[3] ? this.count : (java.lang.Long) defaultValue(fields()[3]);
        record.rms_dist = fieldSetFlags()[4] ? this.rms_dist : (java.lang.Double) defaultValue(fields()[4]);
        record.tolerance = fieldSetFlags()[5] ? this.tolerance : (java.lang.Double) defaultValue(fields()[5]);
        record.num_iters = fieldSetFlags()[6] ? this.num_iters : (java.lang.Integer) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
