/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gpudb;  
@SuppressWarnings("all")
public class random_response extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"random_response\",\"namespace\":\"avro.java.gpudb\",\"fields\":[{\"name\":\"set_id\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"long\"}]}");
  @Deprecated public java.lang.CharSequence set_id;
  @Deprecated public long count;

  /**
   * Default constructor.
   */
  public random_response() {}

  /**
   * All-args constructor.
   */
  public random_response(java.lang.CharSequence set_id, java.lang.Long count) {
    this.set_id = set_id;
    this.count = count;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return set_id;
    case 1: return count;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: set_id = (java.lang.CharSequence)value$; break;
    case 1: count = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'set_id' field.
   */
  public java.lang.CharSequence getSetId() {
    return set_id;
  }

  /**
   * Sets the value of the 'set_id' field.
   * @param value the value to set.
   */
  public void setSetId(java.lang.CharSequence value) {
    this.set_id = value;
  }

  /**
   * Gets the value of the 'count' field.
   */
  public java.lang.Long getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * @param value the value to set.
   */
  public void setCount(java.lang.Long value) {
    this.count = value;
  }

  /** Creates a new random_response RecordBuilder */
  public static avro.java.gpudb.random_response.Builder newBuilder() {
    return new avro.java.gpudb.random_response.Builder();
  }
  
  /** Creates a new random_response RecordBuilder by copying an existing Builder */
  public static avro.java.gpudb.random_response.Builder newBuilder(avro.java.gpudb.random_response.Builder other) {
    return new avro.java.gpudb.random_response.Builder(other);
  }
  
  /** Creates a new random_response RecordBuilder by copying an existing random_response instance */
  public static avro.java.gpudb.random_response.Builder newBuilder(avro.java.gpudb.random_response other) {
    return new avro.java.gpudb.random_response.Builder(other);
  }
  
  /**
   * RecordBuilder for random_response instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<random_response>
    implements org.apache.avro.data.RecordBuilder<random_response> {

    private java.lang.CharSequence set_id;
    private long count;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gpudb.random_response.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gpudb.random_response.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing random_response instance */
    private Builder(avro.java.gpudb.random_response other) {
            super(avro.java.gpudb.random_response.SCHEMA$);
      if (isValidValue(fields()[0], other.set_id)) {
        this.set_id = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.set_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.count)) {
        this.count = (java.lang.Long) data().deepCopy(fields()[1].schema(), other.count);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'set_id' field */
    public java.lang.CharSequence getSetId() {
      return set_id;
    }
    
    /** Sets the value of the 'set_id' field */
    public avro.java.gpudb.random_response.Builder setSetId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.set_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'set_id' field has been set */
    public boolean hasSetId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'set_id' field */
    public avro.java.gpudb.random_response.Builder clearSetId() {
      set_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Long getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public avro.java.gpudb.random_response.Builder setCount(long value) {
      validate(fields()[1], value);
      this.count = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'count' field */
    public avro.java.gpudb.random_response.Builder clearCount() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public random_response build() {
      try {
        random_response record = new random_response();
        record.set_id = fieldSetFlags()[0] ? this.set_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.count = fieldSetFlags()[1] ? this.count : (java.lang.Long) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
