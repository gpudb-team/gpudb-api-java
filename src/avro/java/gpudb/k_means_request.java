/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gpudb;  
@SuppressWarnings("all")
public class k_means_request extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"k_means_request\",\"namespace\":\"avro.java.gpudb\",\"fields\":[{\"name\":\"set_id\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"k\",\"type\":\"int\"},{\"name\":\"tolerance\",\"type\":\"double\"},{\"name\":\"params\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"user_auth_string\",\"type\":\"string\"}]}");
  @Deprecated public java.lang.CharSequence set_id;
  @Deprecated public java.util.List<java.lang.CharSequence> attributes;
  @Deprecated public int k;
  @Deprecated public double tolerance;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> params;
  @Deprecated public java.lang.CharSequence user_auth_string;

  /**
   * Default constructor.
   */
  public k_means_request() {}

  /**
   * All-args constructor.
   */
  public k_means_request(java.lang.CharSequence set_id, java.util.List<java.lang.CharSequence> attributes, java.lang.Integer k, java.lang.Double tolerance, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> params, java.lang.CharSequence user_auth_string) {
    this.set_id = set_id;
    this.attributes = attributes;
    this.k = k;
    this.tolerance = tolerance;
    this.params = params;
    this.user_auth_string = user_auth_string;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return set_id;
    case 1: return attributes;
    case 2: return k;
    case 3: return tolerance;
    case 4: return params;
    case 5: return user_auth_string;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: set_id = (java.lang.CharSequence)value$; break;
    case 1: attributes = (java.util.List<java.lang.CharSequence>)value$; break;
    case 2: k = (java.lang.Integer)value$; break;
    case 3: tolerance = (java.lang.Double)value$; break;
    case 4: params = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 5: user_auth_string = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'set_id' field.
   */
  public java.lang.CharSequence getSetId() {
    return set_id;
  }

  /**
   * Sets the value of the 'set_id' field.
   * @param value the value to set.
   */
  public void setSetId(java.lang.CharSequence value) {
    this.set_id = value;
  }

  /**
   * Gets the value of the 'attributes' field.
   */
  public java.util.List<java.lang.CharSequence> getAttributes() {
    return attributes;
  }

  /**
   * Sets the value of the 'attributes' field.
   * @param value the value to set.
   */
  public void setAttributes(java.util.List<java.lang.CharSequence> value) {
    this.attributes = value;
  }

  /**
   * Gets the value of the 'k' field.
   */
  public java.lang.Integer getK() {
    return k;
  }

  /**
   * Sets the value of the 'k' field.
   * @param value the value to set.
   */
  public void setK(java.lang.Integer value) {
    this.k = value;
  }

  /**
   * Gets the value of the 'tolerance' field.
   */
  public java.lang.Double getTolerance() {
    return tolerance;
  }

  /**
   * Sets the value of the 'tolerance' field.
   * @param value the value to set.
   */
  public void setTolerance(java.lang.Double value) {
    this.tolerance = value;
  }

  /**
   * Gets the value of the 'params' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getParams() {
    return params;
  }

  /**
   * Sets the value of the 'params' field.
   * @param value the value to set.
   */
  public void setParams(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.params = value;
  }

  /**
   * Gets the value of the 'user_auth_string' field.
   */
  public java.lang.CharSequence getUserAuthString() {
    return user_auth_string;
  }

  /**
   * Sets the value of the 'user_auth_string' field.
   * @param value the value to set.
   */
  public void setUserAuthString(java.lang.CharSequence value) {
    this.user_auth_string = value;
  }

  /** Creates a new k_means_request RecordBuilder */
  public static avro.java.gpudb.k_means_request.Builder newBuilder() {
    return new avro.java.gpudb.k_means_request.Builder();
  }
  
  /** Creates a new k_means_request RecordBuilder by copying an existing Builder */
  public static avro.java.gpudb.k_means_request.Builder newBuilder(avro.java.gpudb.k_means_request.Builder other) {
    return new avro.java.gpudb.k_means_request.Builder(other);
  }
  
  /** Creates a new k_means_request RecordBuilder by copying an existing k_means_request instance */
  public static avro.java.gpudb.k_means_request.Builder newBuilder(avro.java.gpudb.k_means_request other) {
    return new avro.java.gpudb.k_means_request.Builder(other);
  }
  
  /**
   * RecordBuilder for k_means_request instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<k_means_request>
    implements org.apache.avro.data.RecordBuilder<k_means_request> {

    private java.lang.CharSequence set_id;
    private java.util.List<java.lang.CharSequence> attributes;
    private int k;
    private double tolerance;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> params;
    private java.lang.CharSequence user_auth_string;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gpudb.k_means_request.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gpudb.k_means_request.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing k_means_request instance */
    private Builder(avro.java.gpudb.k_means_request other) {
            super(avro.java.gpudb.k_means_request.SCHEMA$);
      if (isValidValue(fields()[0], other.set_id)) {
        this.set_id = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.set_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributes)) {
        this.attributes = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[1].schema(), other.attributes);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.k)) {
        this.k = (java.lang.Integer) data().deepCopy(fields()[2].schema(), other.k);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tolerance)) {
        this.tolerance = (java.lang.Double) data().deepCopy(fields()[3].schema(), other.tolerance);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.params)) {
        this.params = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) data().deepCopy(fields()[4].schema(), other.params);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.user_auth_string)) {
        this.user_auth_string = (java.lang.CharSequence) data().deepCopy(fields()[5].schema(), other.user_auth_string);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'set_id' field */
    public java.lang.CharSequence getSetId() {
      return set_id;
    }
    
    /** Sets the value of the 'set_id' field */
    public avro.java.gpudb.k_means_request.Builder setSetId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.set_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'set_id' field has been set */
    public boolean hasSetId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'set_id' field */
    public avro.java.gpudb.k_means_request.Builder clearSetId() {
      set_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'attributes' field */
    public java.util.List<java.lang.CharSequence> getAttributes() {
      return attributes;
    }
    
    /** Sets the value of the 'attributes' field */
    public avro.java.gpudb.k_means_request.Builder setAttributes(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.attributes = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'attributes' field has been set */
    public boolean hasAttributes() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'attributes' field */
    public avro.java.gpudb.k_means_request.Builder clearAttributes() {
      attributes = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'k' field */
    public java.lang.Integer getK() {
      return k;
    }
    
    /** Sets the value of the 'k' field */
    public avro.java.gpudb.k_means_request.Builder setK(int value) {
      validate(fields()[2], value);
      this.k = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'k' field has been set */
    public boolean hasK() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'k' field */
    public avro.java.gpudb.k_means_request.Builder clearK() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'tolerance' field */
    public java.lang.Double getTolerance() {
      return tolerance;
    }
    
    /** Sets the value of the 'tolerance' field */
    public avro.java.gpudb.k_means_request.Builder setTolerance(double value) {
      validate(fields()[3], value);
      this.tolerance = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'tolerance' field has been set */
    public boolean hasTolerance() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'tolerance' field */
    public avro.java.gpudb.k_means_request.Builder clearTolerance() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'params' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getParams() {
      return params;
    }
    
    /** Sets the value of the 'params' field */
    public avro.java.gpudb.k_means_request.Builder setParams(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.params = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'params' field has been set */
    public boolean hasParams() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'params' field */
    public avro.java.gpudb.k_means_request.Builder clearParams() {
      params = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'user_auth_string' field */
    public java.lang.CharSequence getUserAuthString() {
      return user_auth_string;
    }
    
    /** Sets the value of the 'user_auth_string' field */
    public avro.java.gpudb.k_means_request.Builder setUserAuthString(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.user_auth_string = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'user_auth_string' field has been set */
    public boolean hasUserAuthString() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'user_auth_string' field */
    public avro.java.gpudb.k_means_request.Builder clearUserAuthString() {
      user_auth_string = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public k_means_request build() {
      try {
        k_means_request record = new k_means_request();
        record.set_id = fieldSetFlags()[0] ? this.set_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.attributes = fieldSetFlags()[1] ? this.attributes : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        record.k = fieldSetFlags()[2] ? this.k : (java.lang.Integer) defaultValue(fields()[2]);
        record.tolerance = fieldSetFlags()[3] ? this.tolerance : (java.lang.Double) defaultValue(fields()[3]);
        record.params = fieldSetFlags()[4] ? this.params : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[4]);
        record.user_auth_string = fieldSetFlags()[5] ? this.user_auth_string : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
