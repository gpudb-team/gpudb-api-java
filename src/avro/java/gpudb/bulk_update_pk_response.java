/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.java.gpudb;  
@SuppressWarnings("all")
public class bulk_update_pk_response extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"bulk_update_pk_response\",\"namespace\":\"avro.java.gpudb\",\"fields\":[{\"name\":\"count_updated\",\"type\":\"long\"},{\"name\":\"counts_updated\",\"type\":{\"type\":\"array\",\"items\":\"long\"}},{\"name\":\"count_inserted\",\"type\":\"long\"},{\"name\":\"counts_inserted\",\"type\":{\"type\":\"array\",\"items\":\"long\"}}]}");
  @Deprecated public long count_updated;
  @Deprecated public java.util.List<java.lang.Long> counts_updated;
  @Deprecated public long count_inserted;
  @Deprecated public java.util.List<java.lang.Long> counts_inserted;

  /**
   * Default constructor.
   */
  public bulk_update_pk_response() {}

  /**
   * All-args constructor.
   */
  public bulk_update_pk_response(java.lang.Long count_updated, java.util.List<java.lang.Long> counts_updated, java.lang.Long count_inserted, java.util.List<java.lang.Long> counts_inserted) {
    this.count_updated = count_updated;
    this.counts_updated = counts_updated;
    this.count_inserted = count_inserted;
    this.counts_inserted = counts_inserted;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return count_updated;
    case 1: return counts_updated;
    case 2: return count_inserted;
    case 3: return counts_inserted;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: count_updated = (java.lang.Long)value$; break;
    case 1: counts_updated = (java.util.List<java.lang.Long>)value$; break;
    case 2: count_inserted = (java.lang.Long)value$; break;
    case 3: counts_inserted = (java.util.List<java.lang.Long>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'count_updated' field.
   */
  public java.lang.Long getCountUpdated() {
    return count_updated;
  }

  /**
   * Sets the value of the 'count_updated' field.
   * @param value the value to set.
   */
  public void setCountUpdated(java.lang.Long value) {
    this.count_updated = value;
  }

  /**
   * Gets the value of the 'counts_updated' field.
   */
  public java.util.List<java.lang.Long> getCountsUpdated() {
    return counts_updated;
  }

  /**
   * Sets the value of the 'counts_updated' field.
   * @param value the value to set.
   */
  public void setCountsUpdated(java.util.List<java.lang.Long> value) {
    this.counts_updated = value;
  }

  /**
   * Gets the value of the 'count_inserted' field.
   */
  public java.lang.Long getCountInserted() {
    return count_inserted;
  }

  /**
   * Sets the value of the 'count_inserted' field.
   * @param value the value to set.
   */
  public void setCountInserted(java.lang.Long value) {
    this.count_inserted = value;
  }

  /**
   * Gets the value of the 'counts_inserted' field.
   */
  public java.util.List<java.lang.Long> getCountsInserted() {
    return counts_inserted;
  }

  /**
   * Sets the value of the 'counts_inserted' field.
   * @param value the value to set.
   */
  public void setCountsInserted(java.util.List<java.lang.Long> value) {
    this.counts_inserted = value;
  }

  /** Creates a new bulk_update_pk_response RecordBuilder */
  public static avro.java.gpudb.bulk_update_pk_response.Builder newBuilder() {
    return new avro.java.gpudb.bulk_update_pk_response.Builder();
  }
  
  /** Creates a new bulk_update_pk_response RecordBuilder by copying an existing Builder */
  public static avro.java.gpudb.bulk_update_pk_response.Builder newBuilder(avro.java.gpudb.bulk_update_pk_response.Builder other) {
    return new avro.java.gpudb.bulk_update_pk_response.Builder(other);
  }
  
  /** Creates a new bulk_update_pk_response RecordBuilder by copying an existing bulk_update_pk_response instance */
  public static avro.java.gpudb.bulk_update_pk_response.Builder newBuilder(avro.java.gpudb.bulk_update_pk_response other) {
    return new avro.java.gpudb.bulk_update_pk_response.Builder(other);
  }
  
  /**
   * RecordBuilder for bulk_update_pk_response instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<bulk_update_pk_response>
    implements org.apache.avro.data.RecordBuilder<bulk_update_pk_response> {

    private long count_updated;
    private java.util.List<java.lang.Long> counts_updated;
    private long count_inserted;
    private java.util.List<java.lang.Long> counts_inserted;

    /** Creates a new Builder */
    private Builder() {
      super(avro.java.gpudb.bulk_update_pk_response.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.java.gpudb.bulk_update_pk_response.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing bulk_update_pk_response instance */
    private Builder(avro.java.gpudb.bulk_update_pk_response other) {
            super(avro.java.gpudb.bulk_update_pk_response.SCHEMA$);
      if (isValidValue(fields()[0], other.count_updated)) {
        this.count_updated = (java.lang.Long) data().deepCopy(fields()[0].schema(), other.count_updated);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.counts_updated)) {
        this.counts_updated = (java.util.List<java.lang.Long>) data().deepCopy(fields()[1].schema(), other.counts_updated);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count_inserted)) {
        this.count_inserted = (java.lang.Long) data().deepCopy(fields()[2].schema(), other.count_inserted);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.counts_inserted)) {
        this.counts_inserted = (java.util.List<java.lang.Long>) data().deepCopy(fields()[3].schema(), other.counts_inserted);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'count_updated' field */
    public java.lang.Long getCountUpdated() {
      return count_updated;
    }
    
    /** Sets the value of the 'count_updated' field */
    public avro.java.gpudb.bulk_update_pk_response.Builder setCountUpdated(long value) {
      validate(fields()[0], value);
      this.count_updated = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'count_updated' field has been set */
    public boolean hasCountUpdated() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'count_updated' field */
    public avro.java.gpudb.bulk_update_pk_response.Builder clearCountUpdated() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'counts_updated' field */
    public java.util.List<java.lang.Long> getCountsUpdated() {
      return counts_updated;
    }
    
    /** Sets the value of the 'counts_updated' field */
    public avro.java.gpudb.bulk_update_pk_response.Builder setCountsUpdated(java.util.List<java.lang.Long> value) {
      validate(fields()[1], value);
      this.counts_updated = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'counts_updated' field has been set */
    public boolean hasCountsUpdated() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'counts_updated' field */
    public avro.java.gpudb.bulk_update_pk_response.Builder clearCountsUpdated() {
      counts_updated = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'count_inserted' field */
    public java.lang.Long getCountInserted() {
      return count_inserted;
    }
    
    /** Sets the value of the 'count_inserted' field */
    public avro.java.gpudb.bulk_update_pk_response.Builder setCountInserted(long value) {
      validate(fields()[2], value);
      this.count_inserted = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'count_inserted' field has been set */
    public boolean hasCountInserted() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'count_inserted' field */
    public avro.java.gpudb.bulk_update_pk_response.Builder clearCountInserted() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'counts_inserted' field */
    public java.util.List<java.lang.Long> getCountsInserted() {
      return counts_inserted;
    }
    
    /** Sets the value of the 'counts_inserted' field */
    public avro.java.gpudb.bulk_update_pk_response.Builder setCountsInserted(java.util.List<java.lang.Long> value) {
      validate(fields()[3], value);
      this.counts_inserted = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'counts_inserted' field has been set */
    public boolean hasCountsInserted() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'counts_inserted' field */
    public avro.java.gpudb.bulk_update_pk_response.Builder clearCountsInserted() {
      counts_inserted = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public bulk_update_pk_response build() {
      try {
        bulk_update_pk_response record = new bulk_update_pk_response();
        record.count_updated = fieldSetFlags()[0] ? this.count_updated : (java.lang.Long) defaultValue(fields()[0]);
        record.counts_updated = fieldSetFlags()[1] ? this.counts_updated : (java.util.List<java.lang.Long>) defaultValue(fields()[1]);
        record.count_inserted = fieldSetFlags()[2] ? this.count_inserted : (java.lang.Long) defaultValue(fields()[2]);
        record.counts_inserted = fieldSetFlags()[3] ? this.counts_inserted : (java.util.List<java.lang.Long>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
